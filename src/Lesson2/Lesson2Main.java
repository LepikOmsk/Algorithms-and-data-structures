package Lesson2;

import java.util.Random;

public class Lesson2Main {
    public static void main(String[] args) {
    //Создаем новый массив размерностью 6
        Array arr = new Array(6);
    //Проверяем работоспособность метода добавления новых элементов, добавляем 6 элементов
        arr.insert(5);
        arr.insert(8);
        arr.insert(26);
        arr.insert(49);
        arr.insert(29);
        arr.insert(6);
    //Проверяем результат, выводим полученный массив на экран
        System.out.println("Сформированный массив:");
        arr.display(1, 6);
    //Проверяем работоспособность метода поиска элементов, пробуем найти числа 49 и 50 в массиве
        System.out.println("Ищем в массиве число 49" + " " + "Результат:" + " " + arr.find(49));
        System.out.println("Ищем в массиве число 50" + " " + "Результат:" + " " + arr.find(50));
    //Проверяем работоспособность метода удаления элементов, удаляем число 29 из массива
        arr.del(29);
        System.out.println("Удаляем из массива число 29:");
        arr.display(1, 5);
        System.out.println();

    // Пузырьковая сортиоровка
        System.out.println("Пузырьковая сортиоровка");
    //Создаем массив большого размера (10000 элементов)
        Array arr2 = new Array (10000);
    //Заполняем полученный массив случайными числами от 1 до 10000
        Random rand = new Random ();
        for (int i = 0; i < 10000; i++) {
            int x = rand.nextInt(10000);
            arr2.insert(x);
    }
    //Для проверки результата выводим первые 10 и последние 10 элементов массива
        System.out.println("Выводим на экран первые 10 и последние 10 элементов массива большого размера заполненного случайными числами:");
        arr2.display(1, 10);
        arr2.display(9991, 10000);
    //Засекаем время перед началом сортировки
        long time = System.currentTimeMillis();
        arr2.sortBuble();
    //Сортируем и выводим на экран время затраченное на сортировку
        System.out.println("Сортируем, время затраченное на пузырьковую сортировку в миллисекундах:" + (System.currentTimeMillis() - time));
    //Для проверки результата выводим первые 10 и последние 10 элементов массива
        System.out.println("Выводим на экран первые 10 и последние 10 элементов отсортированного массива:");
        arr2.display(1, 10);
        arr2.display(9991, 10000);
        System.out.println();

        // Сортировка методом выбора
        System.out.println("Сортировка методом выбора");
        //Создаем массив большого размера (10000 элементов)
        Array arr3 = new Array (10000);
        //Заполняем полученный массив случайными числами от 1 до 10000
        for (int i = 0; i < 10000; i++) {
            int x = rand.nextInt(10000);
            arr3.insert(x);
        }
        //Для проверки результата выводим первые 10 и последние 10 элементов массива
        System.out.println("Выводим на экран первые 10 и последние 10 элементов массива большого размера заполненного случайными числами:");
        arr3.display(1, 10);
        arr3.display(9991, 10000);
        //Засекаем время перед началом сортировки
        long time1 = System.currentTimeMillis();
        arr3.sortSelect();
        //Сортируем и выводим на экран время затраченное на сортировку
        System.out.println("Сортируем, время затраченное на сортировку методом выбора в миллисекундах:" + (System.currentTimeMillis() - time1));
        //Для проверки результата выводим первые 10 и последние 10 элементов массива
        System.out.println("Выводим на экран первые 10 и последние 10 элементов отсортированного массива:");
        arr3.display(1, 10);
        arr3.display(9991, 10000);
        System.out.println();

        // Сортировка методом вставки
        System.out.println("Сортировка методом вставки");
        //Создаем массив большого размера (10000 элементов)
        Array arr4 = new Array (10000);
        //Заполняем полученный массив случайными числами от 1 до 10000
        for (int i = 0; i < 10000; i++) {
            int x = rand.nextInt(10000);
            arr4.insert(x);
        }
        //Для проверки результата выводим первые 10 и последние 10 элементов массива
        System.out.println("Выводим на экран первые 10 и последние 10 элементов массива большого размера заполненного случайными числами:");
        arr4.display(1, 10);
        arr4.display(9991, 10000);
        //Засекаем время перед началом сортировки
        long time2 = System.currentTimeMillis();
        arr4.sortInsert();
        //Сортируем и выводим на экран время затраченное на сортировку
        System.out.println("Сортируем, время затраченное на сортировку методом вставки в миллисекундах:" + (System.currentTimeMillis() - time2));
        //Для проверки результата выводим первые 10 и последние 10 элементов массива
        System.out.println("Выводим на экран первые 10 и последние 10 элементов отсортированного массива:");
        arr4.display(1, 10);
        arr4.display(9991, 10000);


    //Закоменченный кусок кода ниже показывает выполнение домашнего задания, если бы все сортировки были реализованы в отдельном классе, можете раскомментить, все тоже прекрасно работает.

//      //Создаем экземпляр класса Sort
//        Sort sort = new Sort();
//      //Создаем новый массив и заполняем его случайными числами
//        int[] arr5 = new int[1000];
//        for (int i = 0; i < 1000; i++) {
//            int x = rand.nextInt(1000);
//            arr5[i] = x;
//        }
//      //Сортируем массив и проверяем затраченное время
//        long time3 = System.currentTimeMillis();
//        sort.sortBuble(arr5);
//        System.out.println("Время затраченное на сортировку методом выбора в миллисекундах:" + (System.currentTimeMillis() - time3));
//      //Выводим последние элементы отсортированного массива на экран
//        System.out.println("Выводим на экран последние 10 элементов отсортированного массива:");
//        for (int i = 990; i < 1000; i++) {
//            System.out.print(arr5[i]+" ");
//        }
    }
}